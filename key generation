----------------------------------------------------------------------------------
-- Author: Semih Aslan SAGLAMOL 

-- Create Date:    10:29:16 12/02/2019 
-- Design Name: 	BORON
-- Module Name:    main_enc_smh - Behavioral 
----------------------------------------------------------------------------------
-- NOTE: Master key is given by the user
library IEEE;
 USE ieee.std_logic_1164.all;
 USE ieee.std_logic_arith.all;
 USE ieee.std_logic_unsigned.all;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity main_enc_smh is
	generic(n : integer := 63);
	port(clk       : in std_logic;
		 Master    : in  std_logic_vector (79 downto 0);
		 plain     : in  std_logic_vector (63 downto 0);
		 tnq       : out std_logic_vector (4 downto 0);
		 qey       : out std_logic_vector (79 downto 0);
		 cipher    : out std_logic_vector (63 downto 0));
end main_enc_smh;

architecture Behavioral of main_enc_smh is
	component kygnr
	generic(n : integer := 63);
	port(in_K    : in  std_logic_vector (79 downto 0);
		 clk     : in  std_logic;
		 out_K   : out std_logic_vector (79 downto 0));
	end component;
		component round
		port(txt : in  std_logic_vector (63 downto 0);
			 key : in  std_logic_vector (63 downto 0);
			 pre : out std_logic_vector (63 downto 0));
		end component;	 
			component fadd
			generic(n : integer := 63);
			port(ain1 : in  std_logic_vector (n downto 0);
				 ain2 : in  std_logic_vector (n downto 0); 
				 aout : out std_logic_vector (n downto 0));
			end component;		
		 
		signal lordofthekeys  : std_logic_vector (79 downto 0);
		signal txti,txto,ain1,ain2 : std_logic_vector (63 downto 0);
		signal z	      : std_logic_vector (4  downto 0) := "00000";
		signal keyS : std_logic_vector (63 downto 0) := x"000000000000000e";
		signal keyR : std_logic_vector (79 downto 0) := x"0000000000000000000e";
begin
lordofthekeys <= Master;
  
		process (clk,z)
		begin
			if (clk'event and clk ='1')then 
			 keyS <= keyR(63 downto 0);
			 tnq <= z;
				if(z = "00000")then
				keyS <= Master(63 downto 0);
				   txti <= plain;
				   z <= z + 1;
				end if;
			if(z < "11010" and z > "00000")then
			   txti <= txto ;
			   z <= z + 1;
				 if(z = "11001")then
				  ain1 <= txto;
				  ain2 <= keyR(63 downto 0);
				  qey <= keyR;
				 end if;
			 end if;	
			
			end if;
		end process;
		
			KEY   : kygnr   port map (lordofthekeys,clk,keyR);
			
			ROND  : round   port map (txti,keyS,txto);
			
			FAD   : fadd    port map (ain1,ain2,cipher);
			--cipher <= ain1 xor ain2;
			

end Behavioral;

